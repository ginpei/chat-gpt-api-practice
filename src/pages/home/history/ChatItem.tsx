import { ChatMessage } from "../../../domains/chat/ChatMessage";
import { Container } from "../../../domains/layout/Container";
import { HStack } from "../../../domains/layout/HStack";
import NiceMarkdown from "@ginpei/react-nice-markdown";

export interface ChatItemProps {
  message: ChatMessage;
}

const authorIconMap = {
  "": "?",
  ai: "💻",
  you: "👤",
} as const;

const typeIconMap = {
  "": "",
  chat: "💭",
  image: "🖼️",
} as const;

const bodyThemeMap = {
  "": "",
  ai: "text-sky-700",
  you: "text-gray-700",
} as const;

const wrapperThemeMap = {
  "": "",
  ai: "bg-sky-50 border-b-sky-100",
  you: "bg-white border-b-gray-100",
} as const;

export function ChatItem({ message }: ChatItemProps): JSX.Element {
  const isImageUrl = message.name === "ai" && message.type === "image";

  return (
    <div className={`ChatItem border-b py-2 ${wrapperThemeMap[message.name]}`}>
      <Container>
        <HStack>
          <div className="w-8 mr-2 whitespace-nowrap">
            {authorIconMap[message.name]}
            {message.name === "you" && typeIconMap[message.type]}
          </div>
          <div className={`flex-grow ${bodyThemeMap[message.name]}`}>
            {isImageUrl ? (
              <Image alt="An image generated by AI" src={message.body} />
            ) : (
              <NiceMarkdown content={message.body} />
            )}
          </div>
        </HStack>
      </Container>
    </div>
  );
}

function Image({ alt, src }: { alt: string; src: string }): JSX.Element {
  return (
    <div className="text-center">
      <a href={src} target="_blank">
        {/* eslint-disable-next-line @next/next/no-img-element */}
        <img
          alt={alt}
          className="inline-block mx-auto w-full max-w-[50vh]"
          src={src}
        />
      </a>
    </div>
  );
}
